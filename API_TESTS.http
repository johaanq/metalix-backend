###############################################################################
# METALIX BACKEND - API ENDPOINT TESTS
# Base URL: http://localhost:8080/api/v1
# 
# Instrucciones:
# 1. Ejecuta el backend: mvn spring-boot:run
# 2. Ejecuta primero las pruebas de AUTH para obtener el token
# 3. Copia el token y reemplaza {{token}} en las peticiones que lo requieren
# 4. Usa REST Client extension en VS Code para ejecutar estas pruebas
###############################################################################

@baseUrl = http://localhost:8080/api/v1
@token = YOUR_TOKEN_HERE

###############################################################################
# 0. HOME - Verificación básica
###############################################################################

### GET Home - Verificar que el servidor está funcionando
GET http://localhost:8080/

###############################################################################
# 1. AUTHENTICATION - Endpoints públicos (sin token)
###############################################################################

### POST Register - Crear nuevo usuario CITIZEN
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "email": "test.citizen@metalix.com",
  "password": "password123",
  "firstName": "Test",
  "lastName": "Citizen",
  "role": "CITIZEN"
}

### POST Register - Crear MUNICIPALITY_ADMIN
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "email": "test.admin@metalix.com",
  "password": "password123",
  "firstName": "Test",
  "lastName": "Admin",
  "role": "MUNICIPALITY_ADMIN",
  "municipalityId": 1
}

### POST Login - Usuario existente (COPIA EL TOKEN DE LA RESPUESTA)
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "admin@metalix.com",
  "password": "password123"
}

### POST Login - CITIZEN
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "maria.lopez@email.com",
  "password": "password123"
}

###############################################################################
# 2. USERS - Gestión de usuarios (requiere autenticación)
###############################################################################

### GET All Users (ADMIN only)
GET {{baseUrl}}/users
Authorization: Bearer {{token}}

### GET User by ID
GET {{baseUrl}}/users/1
Authorization: Bearer {{token}}

### GET User Points
GET {{baseUrl}}/users/3/points
Authorization: Bearer {{token}}

### GET Users by Role
GET {{baseUrl}}/users/role/CITIZEN
Authorization: Bearer {{token}}

### GET Users by Municipality
GET {{baseUrl}}/users/municipality/1
Authorization: Bearer {{token}}

### GET User Profile
GET {{baseUrl}}/users/3/profile
Authorization: Bearer {{token}}

### GET User Stats
GET {{baseUrl}}/users/3/stats
Authorization: Bearer {{token}}

### GET User Activity
GET {{baseUrl}}/users/3/activity
Authorization: Bearer {{token}}

### PUT Update User
PUT {{baseUrl}}/users/3
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "firstName": "Maria Updated",
  "lastName": "Lopez"
}

### PATCH Deactivate User
PATCH {{baseUrl}}/users/3/deactivate
Authorization: Bearer {{token}}

### DELETE User (SYSTEM_ADMIN only)
DELETE {{baseUrl}}/users/999
Authorization: Bearer {{token}}

###############################################################################
# 3. MUNICIPALITIES - Gestión de municipalidades
###############################################################################

### GET All Municipalities
GET {{baseUrl}}/municipalities
Authorization: Bearer {{token}}

### GET Municipality by ID
GET {{baseUrl}}/municipalities/1
Authorization: Bearer {{token}}

### GET Municipality by Code
GET {{baseUrl}}/municipalities/code/LIMA001
Authorization: Bearer {{token}}

### GET Municipality Stats
GET {{baseUrl}}/municipalities/1/stats
Authorization: Bearer {{token}}

### GET Municipality Dashboard
GET {{baseUrl}}/municipalities/1/dashboard
Authorization: Bearer {{token}}

### POST Create Municipality (ADMIN only)
POST {{baseUrl}}/municipalities
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Test Municipality",
  "code": "TEST001",
  "region": "Test Region",
  "population": 50000,
  "area": 100.5,
  "contactEmail": "test@municipality.com",
  "contactPhone": "+51-999-999-999",
  "contactAddress": "Test Street 123",
  "website": "https://test.municipality.com"
}

### PUT Update Municipality
PUT {{baseUrl}}/municipalities/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Lima Metropolitana Updated",
  "population": 10000000
}

### DELETE Municipality (ADMIN only)
DELETE {{baseUrl}}/municipalities/999
Authorization: Bearer {{token}}

###############################################################################
# 4. ZONES - Gestión de zonas
###############################################################################

### GET All Zones
GET {{baseUrl}}/zones
Authorization: Bearer {{token}}

### GET Zone by ID
GET {{baseUrl}}/zones/1
Authorization: Bearer {{token}}

### GET Zones by Municipality
GET {{baseUrl}}/zones/municipality/1
Authorization: Bearer {{token}}

### POST Create Zone
POST {{baseUrl}}/zones
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Test Zone",
  "municipalityId": 1,
  "zoneType": "RESIDENTIAL",
  "population": 5000,
  "boundariesNorth": -12.0,
  "boundariesSouth": -12.1,
  "boundariesEast": -77.0,
  "boundariesWest": -77.1
}

### PUT Update Zone
PUT {{baseUrl}}/zones/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "San Isidro Updated",
  "population": 60000
}

### DELETE Zone
DELETE {{baseUrl}}/zones/999
Authorization: Bearer {{token}}

###############################################################################
# 5. WASTE COLLECTORS - Gestión de contenedores
###############################################################################

### GET All Waste Collectors
GET {{baseUrl}}/waste-collectors
Authorization: Bearer {{token}}

### GET Waste Collector by ID
GET {{baseUrl}}/waste-collectors/1
Authorization: Bearer {{token}}

### GET Waste Collectors by Municipality
GET {{baseUrl}}/waste-collectors/municipality/1
Authorization: Bearer {{token}}

### GET Waste Collectors by Zone
GET {{baseUrl}}/waste-collectors/zone/1
Authorization: Bearer {{token}}

### GET Full Collectors (>80% capacity)
GET {{baseUrl}}/waste-collectors/full
Authorization: Bearer {{token}}

### POST Create Waste Collector
POST {{baseUrl}}/waste-collectors
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Test Collector",
  "municipalityId": 1,
  "zoneId": 1,
  "latitude": -12.0464,
  "longitude": -77.0428,
  "address": "Test Street 456",
  "status": "ACTIVE",
  "capacity": 1000.0,
  "currentWeight": 0.0
}

### PUT Update Waste Collector
PUT {{baseUrl}}/waste-collectors/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "status": "MAINTENANCE",
  "currentWeight": 500.0
}

### PATCH Empty Collector
PATCH {{baseUrl}}/waste-collectors/1/empty
Authorization: Bearer {{token}}

### DELETE Waste Collector
DELETE {{baseUrl}}/waste-collectors/999
Authorization: Bearer {{token}}

###############################################################################
# 6. WASTE COLLECTIONS - Registros de recolección
###############################################################################

### GET All Waste Collections
GET {{baseUrl}}/waste-collections
Authorization: Bearer {{token}}

### GET Waste Collection by ID
GET {{baseUrl}}/waste-collections/1
Authorization: Bearer {{token}}

### GET Waste Collections by User
GET {{baseUrl}}/waste-collections/user/3?page=0&size=10
Authorization: Bearer {{token}}

### GET Waste Collections by Collector
GET {{baseUrl}}/waste-collections/collector/1
Authorization: Bearer {{token}}

### GET Waste Collections by Municipality
GET {{baseUrl}}/waste-collections/municipality/1
Authorization: Bearer {{token}}

### POST Create Waste Collection
POST {{baseUrl}}/waste-collections
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "collectorId": 1,
  "weight": 5.5,
  "materialType": "METAL",
  "rfidCardNumber": "RFID001"
}

### PUT Update Waste Collection
PUT {{baseUrl}}/waste-collections/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "status": "COMPLETED"
}

### DELETE Waste Collection
DELETE {{baseUrl}}/waste-collections/999
Authorization: Bearer {{token}}

###############################################################################
# 7. SENSOR DATA - Datos de sensores
###############################################################################

### GET All Sensor Data (ADMIN only)
GET {{baseUrl}}/sensor-data
Authorization: Bearer {{token}}

### GET Sensor Data by ID
GET {{baseUrl}}/sensor-data/1
Authorization: Bearer {{token}}

### GET Sensor Data by Collector
GET {{baseUrl}}/sensor-data/collector/1
Authorization: Bearer {{token}}

### GET Latest Sensor Data by Collector
GET {{baseUrl}}/sensor-data/collector/1/latest
Authorization: Bearer {{token}}

### POST Create Sensor Data
POST {{baseUrl}}/sensor-data
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "collectorId": 1,
  "sensorType": "WEIGHT",
  "value": 750.5,
  "unit": "kg",
  "status": "NORMAL"
}

### DELETE Sensor Data (SYSTEM_ADMIN only)
DELETE {{baseUrl}}/sensor-data/999
Authorization: Bearer {{token}}

###############################################################################
# 8. REWARDS - Gestión de recompensas
###############################################################################

### GET All Rewards
GET {{baseUrl}}/rewards
Authorization: Bearer {{token}}

### GET Reward by ID
GET {{baseUrl}}/rewards/1
Authorization: Bearer {{token}}

### GET Active Rewards
GET {{baseUrl}}/rewards/active
Authorization: Bearer {{token}}

### GET Rewards by Municipality
GET {{baseUrl}}/rewards/municipality/1
Authorization: Bearer {{token}}

### GET Affordable Rewards (max points)
GET {{baseUrl}}/rewards/affordable/500
Authorization: Bearer {{token}}

### POST Create Reward
POST {{baseUrl}}/rewards
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Test Reward",
  "description": "Test reward description",
  "pointsCost": 100,
  "category": "SHOPPING",
  "stock": 50,
  "validUntil": "2025-12-31T23:59:59",
  "municipalityId": 1,
  "isActive": true
}

### PUT Update Reward
PUT {{baseUrl}}/rewards/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "stock": 100,
  "pointsCost": 120
}

### DELETE Reward
DELETE {{baseUrl}}/rewards/999
Authorization: Bearer {{token}}

###############################################################################
# 9. REWARD TRANSACTIONS - Transacciones de recompensas
###############################################################################

### GET All Reward Transactions (ADMIN only)
GET {{baseUrl}}/reward-transactions
Authorization: Bearer {{token}}

### GET Reward Transaction by ID
GET {{baseUrl}}/reward-transactions/1
Authorization: Bearer {{token}}

### GET Reward Transactions by User
GET {{baseUrl}}/reward-transactions/user/3?page=0&size=10
Authorization: Bearer {{token}}

### POST Redeem Reward
POST {{baseUrl}}/reward-transactions/redeem
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "rewardId": 1
}

### DELETE Reward Transaction (SYSTEM_ADMIN only)
DELETE {{baseUrl}}/reward-transactions/999
Authorization: Bearer {{token}}

###############################################################################
# 10. RFID CARDS - Gestión de tarjetas RFID
###############################################################################

### GET All RFID Cards (ADMIN only)
GET {{baseUrl}}/rfid-cards
Authorization: Bearer {{token}}

### GET RFID Card by ID
GET {{baseUrl}}/rfid-cards/1
Authorization: Bearer {{token}}

### GET RFID Card by Card Number
GET {{baseUrl}}/rfid-cards/number/RFID001
Authorization: Bearer {{token}}

### GET RFID Card by User ID
GET {{baseUrl}}/rfid-cards/user/3
Authorization: Bearer {{token}}

### POST Create RFID Card
POST {{baseUrl}}/rfid-cards
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "cardNumber": "RFID999",
  "cardType": "STANDARD",
  "isActive": true
}

### POST Assign Card to User
POST {{baseUrl}}/rfid-cards/assign
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "cardNumber": "RFID999",
  "userId": 3
}

### POST Use RFID Card
POST {{baseUrl}}/rfid-cards/use/RFID001
Authorization: Bearer {{token}}

### PUT Update RFID Card
PUT {{baseUrl}}/rfid-cards/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "isActive": false
}

### PATCH Block RFID Card
PATCH {{baseUrl}}/rfid-cards/1/block
Authorization: Bearer {{token}}

### DELETE RFID Card (SYSTEM_ADMIN only)
DELETE {{baseUrl}}/rfid-cards/999
Authorization: Bearer {{token}}

###############################################################################
# 11. MONITORING - Reportes, métricas y alertas
###############################################################################

### GET All Reports (ADMIN only)
GET {{baseUrl}}/monitoring/reports
Authorization: Bearer {{token}}

### GET Report by ID (ADMIN only)
GET {{baseUrl}}/monitoring/reports/1
Authorization: Bearer {{token}}

### GET Reports by Municipality (ADMIN only)
GET {{baseUrl}}/monitoring/reports/municipality/1
Authorization: Bearer {{token}}

### POST Create Report (ADMIN only)
POST {{baseUrl}}/monitoring/reports
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "municipalityId": 1,
  "reportType": "MONTHLY",
  "title": "Test Report",
  "description": "Test report description",
  "data": "{\"totalCollections\": 100}"
}

### GET All Metrics
GET {{baseUrl}}/monitoring/metrics
Authorization: Bearer {{token}}

### GET Metric by ID
GET {{baseUrl}}/monitoring/metrics/1
Authorization: Bearer {{token}}

### GET Metrics by Municipality
GET {{baseUrl}}/monitoring/metrics/municipality/1
Authorization: Bearer {{token}}

### POST Create Metric (ADMIN only)
POST {{baseUrl}}/monitoring/metrics
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "municipalityId": 1,
  "metricType": "COLLECTION_RATE",
  "name": "Test Metric",
  "value": 95.5,
  "unit": "percentage"
}

### GET All Alerts
GET {{baseUrl}}/monitoring/alerts
Authorization: Bearer {{token}}

### GET Alert by ID
GET {{baseUrl}}/monitoring/alerts/1
Authorization: Bearer {{token}}

### GET Alerts by Municipality
GET {{baseUrl}}/monitoring/alerts/municipality/1
Authorization: Bearer {{token}}

### GET Unread Alerts
GET {{baseUrl}}/monitoring/alerts/unread
Authorization: Bearer {{token}}

### POST Create Alert (ADMIN only)
POST {{baseUrl}}/monitoring/alerts
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "municipalityId": 1,
  "alertType": "COLLECTOR_FULL",
  "severity": "HIGH",
  "title": "Test Alert",
  "message": "Test alert message",
  "isRead": false
}

###############################################################################
# FIN DE LAS PRUEBAS
###############################################################################

